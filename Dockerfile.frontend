# Етап 1: Build React app
FROM node:18-alpine as build

# Встановлюємо робочу директорію
WORKDIR /app

# Копіюємо package.json і lock-файл для кешу залежностей
COPY frontend/package*.json ./

# Встановлюємо залежності
RUN npm install

# Копіюємо всі файли проєкту
COPY frontend/ .

# Створюємо білд React-додатку
RUN npm run build

# Етап 2: Production сервер на базі nginx
FROM nginx:alpine

# Копіюємо конфіг nginx
COPY nginx/default.conf /etc/nginx/conf.d/default.conf

# Копіюємо React білд у папку, з якої nginx буде обслуговувати файли
COPY --from=build /app/build /usr/share/nginx/html

# Відкриваємо порт
EXPOSE 80

# Запускаємо nginx у фоновому режимі
CMD ["nginx", "-g", "daemon off;"]

## Етап 1: Збірка React
#FROM node:18-alpine as build
#
#WORKDIR /app
#
#COPY frontend/package.json frontend/package-lock.json ./
#RUN npm install
#
#COPY frontend/ ./
#RUN npm run build
#
## Етап 2: Сервер nginx
#FROM nginx:alpine
#
#COPY nginx/default.conf /etc/nginx/conf.d/default.conf
#COPY --from=build /app/build /usr/share/nginx/html
#
#EXPOSE 80
#CMD ["nginx", "-g", "daemon off;"]