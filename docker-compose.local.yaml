#docker-compose -f docker-compose.local.yaml up --build
#  docker-compose -f docker-compose.local.yaml up --build backend
#  docker-compose -f docker-compose.local.yaml up --build frontend
version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile

    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env
    working_dir: /app
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: on-failure
    depends_on:
      - final_project-mysql
      - final_project-redis
    command: >
      sh -c "if [ ! -d dist ]; then npm run build; fi && node dist/src/main.js"
    networks:
      - final_project_net

  nginx:
   build:
     context: .
     dockerfile: Dockerfile.frontend
   container_name: final_project-nginx
   ports:
    - "80:80"
   depends_on:
    - backend
   networks:
    - final_project_net

  final_project-mysql:
    container_name: final_project-mysql
    image: mysql:8.0
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      MYSQL_ROOT_PASSWORD: owu.linkpc.net
      MYSQL_USER: nadiamysql
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: nadiamysql
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "owu.linkpc.net"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - final_project_net

  final_project-redis:
    container_name: final_project-redis
    image: redis:7.2.3
    env_file:
      - ./backend/.env
    ports:
      - '${REDIS_PORT:-6379}:6379'
    command: redis-server --requirepass redispass
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "redispass", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - final_project_net

volumes:
  mysql_data:

networks:
  final_project_net:
    driver: bridge