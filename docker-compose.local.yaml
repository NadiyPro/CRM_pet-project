version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
        - "3000:3000"
    env_file:
      - ./backend/.env
    working_dir: /app
    volumes:
      - ./backend:/app
#      - .:/app
      - /app/node_modules
#      - dist-volume:/app/dist
    restart: on-failure
    depends_on:
      - final_project-mysql
      - final_project-redis
      - final_project-file-s3
    command: >
      sh -c "if [ ! -d dist ]; then npm run build; fi && node dist/src/main.js"

    networks:
      - default

  final_project-mysql:
    container_name: final_project-mysql
    image: mysql:8.0
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      MYSQL_ROOT_PASSWORD: owu.linkpc.net
      MYSQL_USER: nadiamysql
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: nadiamysql
#      MYSQL_ROOT_PASSWORD: '${MYSQL_PASSWORD}'
#      MYSQL_USER: '${MYSQL_USER}'
#      MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
#      MYSQL_DATABASE: '${MYSQL_DB}'
    tmpfs:
      - /var/lib/mysql
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "owu.linkpc.net"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - default


  final_project-redis:
    container_name: final_project-redis
    image: redis:7.2.3
    env_file:
      - ./backend/.env
    ports:
      - '${REDIS_PORT:-6379}:6379'
    command: redis-server --requirepass redispass
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "redispass", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - default

  final_project-file-s3:
    container_name: final_project-file-s3
    image: quay.io/minio/minio:latest
    restart: unless-stopped
    env_file:
      - ./backend/.env
    command: server /data --console-address ":9001"
    volumes:
      - ./final_project-file-api-s3-data:/data
    environment:
      MINIO_ROOT_USER: user
      MINIO_ROOT_PASSWORD: password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - default

volumes:
  mysql_data:
  minio_data:
  dist-volume:

networks:
  default:
    driver: bridge

